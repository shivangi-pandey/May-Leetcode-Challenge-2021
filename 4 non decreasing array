Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element.

We define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).

 

Example 1:

Input: nums = [4,2,3]
Output: true




--------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    bool checkPossibility(vector<int>& nums) {
        int violation =0;
        int n=nums.size();
        for(int i=1;i<n;i++){
            
            if(nums[i-1]>nums[i]){
                
                if(violation==1){
                    return false;
                }
            
            
            violation++;
            
                if(i<2||nums[i-2]<=nums[i]){
                    nums[i-1]=nums[i];
                }else{
                    nums[i]=nums[i-1];
                }
            }
        }
        return true;
    }
};
